import * as dotenv from 'dotenv';

dotenv.config();

const {
  CONTRACTS_LOGGING_LEVEL,
  CONTRACTS_LOGGING_FORMAT,
  CONTRACTS_LOGGING_COLORIZE,

  CONTRACTS_SERVER_HTTP,
  CONTRACTS_SERVER_HTTP_IP,
  CONTRACTS_SERVER_HTTP_PORT,
  CONTRACTS_SERVER_HTTPS,
  CONTRACTS_SERVER_HTTPS_IP,
  CONTRACTS_SERVER_HTTPS_PORT,
  CONTRACTS_SERVER_HTTPS_PUB_KEY,
  CONTRACTS_SERVER_HTTPS_PRIV_KEY,
  CONTRACTS_SERVER_HTTPS_CA,

  CONTRACTS_AUTH_VERIFY_URL,
  CONTRACTS_AUTH_ACCESS_JWT,
  CONTRACTS_AUTH_TIMEOUT,
  CONTRACTS_AUTH_TLS,
  CONTRACTS_AUTH_CA_FILE,
  CONTRACTS_AUTH_CERT_FILE,
  CONTRACTS_AUTH_KEY_FILE,
  CONTRACTS_AUTH_KEY_PASSWORD,

  CONTRACTS_FABRICAPI_URL,
  CONTRACTS_FABRICAPI_TIMEOUT,
  CONTRACTS_FABRICAPI_USER,
  CONTRACTS_FABRICAPI_PASSWORD,
  CONTRACTS_FABRICAPI_EVMCHAINCODE,
  CONTRACTS_FABRICAPI_REG_USER,
  CONTRACTS_FABRICAPI_REG_PASSWORD,
  CONTRACTS_FABRICAPI_MSPID,
  CONTRACTS_FABRICAPI_TLS,
  CONTRACTS_FABRICAPI_TLS_PUB_KEY,
  CONTRACTS_FABRICAPI_TLS_PRIV_KEY,
  CONTRACTS_FABRICAPI_TLS_PRIV_KEY_PASSWORD,
  CONTRACTS_FABRICAPI_TLS_CA,

  CONTRACTS_NATS_SERVERS,
  CONTRACTS_NATS_TLS,
  CONTRACTS_NATS_TLS_PUB_KEY,
  CONTRACTS_NATS_TLS_PRIV_KEY,
  CONTRACTS_NATS_TLS_CA,
  CONTRACTS_NATS_USER,
  CONTRACTS_NATS_PASSWORD
} = process.env;

export default {
  logging: {
    level: CONTRACTS_LOGGING_LEVEL,
    format: CONTRACTS_LOGGING_FORMAT,
    colorize: CONTRACTS_LOGGING_COLORIZE === 'true'
  },
  server: {
    http: CONTRACTS_SERVER_HTTP === 'true',
    httpPort: parseInt(CONTRACTS_SERVER_HTTP_PORT, 10) || 8080,
    httpIp: CONTRACTS_SERVER_HTTP_IP || '0.0.0.0',

    https: CONTRACTS_SERVER_HTTPS === 'true',
    httpsPort: parseInt(CONTRACTS_SERVER_HTTPS_PORT, 10) || 8443,
    httpsIp: CONTRACTS_SERVER_HTTPS_IP || '0.0.0.0',
    httpsCa: CONTRACTS_SERVER_HTTPS_CA,
    httpsPubKey: CONTRACTS_SERVER_HTTPS_PUB_KEY,
    httpsPrivKey: CONTRACTS_SERVER_HTTPS_PRIV_KEY,
    httpsRequestClientCert: false
  },
  auth: {
    verifyUrl: CONTRACTS_AUTH_VERIFY_URL || 'http://auth:3000/auth/verify',
    accessJwt: CONTRACTS_AUTH_ACCESS_JWT,
    timeout: parseInt(CONTRACTS_AUTH_TIMEOUT, 10) || 10000,
    tls: CONTRACTS_AUTH_TLS === 'true',
    caFile: CONTRACTS_AUTH_CA_FILE,
    certFile: CONTRACTS_AUTH_CERT_FILE,
    keyFile: CONTRACTS_AUTH_KEY_FILE,
    keyPass: CONTRACTS_AUTH_KEY_PASSWORD
  },
  fabricapi: {
    apiUrl: CONTRACTS_FABRICAPI_URL || 'http://fabricapi:3000/api',
    timeout: parseInt(CONTRACTS_FABRICAPI_TIMEOUT, 10) || 10000,
    username: CONTRACTS_FABRICAPI_USER,
    password: CONTRACTS_FABRICAPI_PASSWORD,
    evmChaincode: CONTRACTS_FABRICAPI_EVMCHAINCODE,
    regUser: CONTRACTS_FABRICAPI_REG_USER,
    regPassword: CONTRACTS_FABRICAPI_REG_PASSWORD,
    mspId: CONTRACTS_FABRICAPI_MSPID,
    tls: CONTRACTS_FABRICAPI_TLS === 'true',
    tlsPubKey: CONTRACTS_FABRICAPI_TLS_PUB_KEY || '',
    tlsPrivKey: CONTRACTS_FABRICAPI_TLS_PRIV_KEY || '',
    tlsPrivKeyPass: CONTRACTS_FABRICAPI_TLS_PRIV_KEY_PASSWORD || '',
    tlsCa: CONTRACTS_FABRICAPI_TLS_CA || ''
  },
  mq: {
    channelChaincodes: '/hyperledger-fabricapi/events/chaincodes/',
    channelTransactions: '/hyperledger-fabricapi/events/transactions/',
    channelBlocks: '/hyperledger-fabricapi/events/blocks/',

    natsServers: CONTRACTS_NATS_SERVERS || 'localhost:4222',
    natsTls: CONTRACTS_NATS_TLS === 'true',
    natsTlsPubKey: CONTRACTS_NATS_TLS_PUB_KEY || '',
    natsTlsPrivKey: CONTRACTS_NATS_TLS_PRIV_KEY || '',
    natsTlsCa: CONTRACTS_NATS_TLS_CA || '',
    natsUser: CONTRACTS_NATS_USER || '',
    natsPassword: CONTRACTS_NATS_PASSWORD || ''
  }
};
